import t,{useRef as e,useEffect as n,useState as r}from"react";const i=({onFinish:r,x:i,y:o,size:a,color:s,duration:l})=>{const c=e(null);l=null!=l?l:600;const u={position:"absolute",background:s=null!=s?s:"white",borderRadius:"50%",width:"1px",height:"1px",left:i,top:o,pointerEvents:"none"};return n((()=>{const{current:t}=c;t&&t.animate([{opacity:1},{opacity:0,width:`${a}px`,height:`${a}px`,transform:`translate(${a/-2}px, ${a/-2}px)`}],{duration:l,fill:"forwards",easing:"ease-out"}).addEventListener("finish",r)}),[c]),t.createElement("span",Object.assign({},{ref:c,style:u}))},o=({color:e,duration:n,maxRipples:o,centered:a}={})=>{const[s,l]=r([]),[c,u]=r(0),h=r=>{o&&s.length>=o||l((o=>{const a=t.createElement(i,Object.assign({key:c},r,{color:null!=e?e:r.color,duration:null!=n?n:r.duration,onFinish:()=>{l((t=>t.filter((t=>t!==a))))}}));return u((t=>t+1)),[...o,a]}))};return{createByEvent:t=>{const{clientX:e,clientY:n}=t,r=t.currentTarget instanceof Element?t.currentTarget:null,{width:i,height:o,left:s,top:l}=r?r.getBoundingClientRect():{width:0,height:0,left:0,top:0};if(a)return void h({x:i/2,y:o/2,size:Math.sqrt(i**2+o**2)});const c=Math.round(e-s),u=Math.round(n-l),d=2*Math.max(i-c,c)+2,p=2*Math.max(o-u,u)+2,g=Math.sqrt(d**2+p**2);h({x:c,y:u,size:g})},create:h,Ripples:s}};export{i as Ripple,o as useRipples};
//# sourceMappingURL=index.js.map
