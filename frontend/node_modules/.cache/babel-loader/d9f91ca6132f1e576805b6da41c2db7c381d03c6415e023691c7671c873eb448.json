{"ast":null,"code":"import{createContext,useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";export const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);const[token,setToken]=useState(null);// Initialize auth state from localStorage when the app loads\nuseEffect(()=>{const storedUser=localStorage.getItem('user');const storedToken=localStorage.getItem('token');if(storedUser&&storedToken){setUser(JSON.parse(storedUser));setToken(storedToken);}},[]);const login=(userData,jwt)=>{setUser(userData);setToken(jwt);localStorage.setItem('user',JSON.stringify(userData));localStorage.setItem('token',jwt);};const logout=()=>{setUser(null);setToken(null);localStorage.removeItem('user');localStorage.removeItem('token');};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,token,login,logout},children:children});};","map":{"version":3,"names":["createContext","useState","useEffect","jsx","_jsx","AuthContext","AuthProvider","_ref","children","user","setUser","token","setToken","storedUser","localStorage","getItem","storedToken","JSON","parse","login","userData","jwt","setItem","stringify","logout","removeItem","Provider","value"],"sources":["/Users/madhavpatel/Desktop/Evently/TicketSale/frontend/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from 'react';\n\nexport const AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n\n  // Initialize auth state from localStorage when the app loads\n  useEffect(() => {\n    const storedUser = localStorage.getItem('user');\n    const storedToken = localStorage.getItem('token');\n    \n    if (storedUser && storedToken) {\n      setUser(JSON.parse(storedUser));\n      setToken(storedToken);\n    }\n  }, []);\n\n  const login = (userData, jwt) => {\n    setUser(userData);\n    setToken(jwt);\n    localStorage.setItem('user', JSON.stringify(userData));\n    localStorage.setItem('token', jwt);\n  };\n\n  const logout = () => {\n    setUser(null);\n    setToken(null);\n    localStorage.removeItem('user');\n    localStorage.removeItem('token');\n  };\n\n  return (\n    <AuthContext.Provider value={{ user, token, login, logout }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":"AAAA,OAASA,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE3D,MAAO,MAAM,CAAAC,WAAW,cAAGL,aAAa,CAAC,CAAC,CAE1C,MAAO,MAAM,CAAAM,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGT,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACU,KAAK,CAAEC,QAAQ,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAExC;AACAC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAW,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAC/C,KAAM,CAAAC,WAAW,CAAGF,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAEjD,GAAIF,UAAU,EAAIG,WAAW,CAAE,CAC7BN,OAAO,CAACO,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,CAAC,CAC/BD,QAAQ,CAACI,WAAW,CAAC,CACvB,CACF,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,KAAK,CAAGA,CAACC,QAAQ,CAAEC,GAAG,GAAK,CAC/BX,OAAO,CAACU,QAAQ,CAAC,CACjBR,QAAQ,CAACS,GAAG,CAAC,CACbP,YAAY,CAACQ,OAAO,CAAC,MAAM,CAAEL,IAAI,CAACM,SAAS,CAACH,QAAQ,CAAC,CAAC,CACtDN,YAAY,CAACQ,OAAO,CAAC,OAAO,CAAED,GAAG,CAAC,CACpC,CAAC,CAED,KAAM,CAAAG,MAAM,CAAGA,CAAA,GAAM,CACnBd,OAAO,CAAC,IAAI,CAAC,CACbE,QAAQ,CAAC,IAAI,CAAC,CACdE,YAAY,CAACW,UAAU,CAAC,MAAM,CAAC,CAC/BX,YAAY,CAACW,UAAU,CAAC,OAAO,CAAC,CAClC,CAAC,CAED,mBACErB,IAAA,CAACC,WAAW,CAACqB,QAAQ,EAACC,KAAK,CAAE,CAAElB,IAAI,CAAEE,KAAK,CAAEQ,KAAK,CAAEK,MAAO,CAAE,CAAAhB,QAAA,CACzDA,QAAQ,CACW,CAAC,CAE3B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}